# Command: dot packages.gv -Tpng > packages.png

digraph G {
  node [shape=note];
  lambda [label=< lambda<br/><font point-size="10pt">- typedLambdaCalculus.scala<br/>- substitutions.scala<br/>- BetaReduction.scala<br/>- replacements.scala (commented out)<br/>- longNormalForm.scala<br/>- utils.scala</font> >]
  symbols [label=< symbols<br/><font point-size="10pt">- symbols.scala</font> >]
  types [label=< types<br/><font point-size="10pt">- types.scala</font> >]
  hol [label=< hol<br/><font point-size="10pt">- hol.scala<br/>- substitution.scala<br/>- betaReduction.scala<br/>- utils.scala</font> >]
  logicSymbols [label=< logicSymbols<br/><font point-size="10pt">- logicSymbols.scala</font> >]
  skolemSymbols [label=< skolemSymbols<br/><font point-size="10pt">- skolemSymbols.scala</font> >]
  replacements [label=< replacements<br/><font point-size="10pt">- Replacements.scala (commented out)</font> >]
  fol [label=< fol<br/><font point-size="10pt">- fol.scala<br/>- utils.scala<br/>- substitution.scala<br/>- betaReduction.scala</font> >]
  schema [label=< schema<br/><font point-size="10pt">- schema.scala<br/>- substitution.scala<br/>- betaReduction.scala<br/>- utils.scala</font> >]
  logicSymbols_schema [label=< logicSymbols<br/><font point-size="10pt">- logicSymbols.scala</font> >]
  calculi [label=< calculi<br/><font point-size="10pt">- occurrences.scala</font> >]
  proofs [label=< proofs<br/><font point-size="10pt">- treeProofs.scala<br/>- proofs.scala<br/>- agraphProofs.scala</font> >]
  lk [label=< lk<br/><font point-size="10pt">- definitionRules.scala<br/>- equationalRules.scala<br/>- propositionalRules.scala<br/>- quantificationRules.scala<br/>- lkExtractors.scala<br/>- macroRules.scala</font> >]
  base [label=< base<br/><font point-size="10pt">- base.scala<br/>- lkSpecs.scala</font> >]
  lksk [label=< lksk<br/><font point-size="10pt">- base.scala<br/>- lksk.scala<br/>- lkskExtractors.scala</font> >]
  resolution [label=< resolution<br/><font point-size="10pt">- base.scala</font> >]
  robinson [label=< robinson<br/><font point-size="10pt">- instance.scala<br/>- robinson.scala</font> >]
  ral [label=< ral<br/><font point-size="10pt">- ral.scala</font> >]
  andrews [label=< andrews<br/><font point-size="10pt">- andrews.scala</font> >]
  slk [label=< slk<br/><font point-size="10pt">- slk.scala<br/>- macroRules.scala</font> >]
  expansionTrees [label=< expansionTrees<br/><font point-size="10pt">- expansionTrees.scala<br/>- multiExpansionTrees.scala</font> >]
  diophantine [label=< diophantine<br/><font point-size="10pt">- vector.scala<br/>- lankford.scala</font> >]
  unification [label=< unification<br/><font point-size="10pt">- ACUnification.scala (commented out)<br/>- ac_utils.scala (commented out)<br/>- UnificationAlgorithm.scala<br/>- UnificationException.scala</font> >]
  folUni [label=< fol<br/><font point-size="10pt">- FOLUnificationAlgorithm.scala</font> >]
  holUni [label=< hol >]
  huet [label=< huet<br/><font point-size="10pt">- HuetAlgorithm.scala (commented out)</font> >]
  expansionTreesAlg [label=< expansionTrees<br/><font point-size="10pt">- prenexToExpansionTree.scala<br/>- compress.scala</font> >]
  cutIntroduction [label=< cutIntroduction<br/><font point-size="10pt">- prenexToExpansionTree.scala<br/>- compress.scala</font> >]
  interpolation [label=< interpolation<br/><font point-size="10pt">- interpolation.scala</font> >]
  matching [label=< matching<br/><font point-size="10pt">- MatchingAlgorithm.scala (commented out)<br/>- FOLMatchingAlgorithm.scala<br/>- NaiveIncompleteMatchingAlgorithm.scala</font> >]
  
  at -> logic -> language -> lambda -> symbols;
  lambda -> types;
  language -> hol;
  hol -> logicSymbols;
  hol -> skolemSymbols;
  hol -> replacements;
  language -> fol;
  language -> schema;
  schema -> logicSymbols_schema;
  logic -> utils;
  logic -> calculi;
  calculi -> proofs;
  calculi -> lk;
  lk -> base;
  calculi -> lksk;
  calculi -> resolution;
  resolution -> robinson;
  resolution -> andrews;
  resolution -> ral;
  calculi -> slk;
  calculi -> expansionTrees;
  logic -> algorithms;
  algorithms -> diophantine;
  algorithms -> unification;
  unification -> folUni;
  unification -> holUni;
  holUni -> huet;
  algorithms -> expansionTreesAlg;
  algorithms -> cutIntroduction;
  algorithms -> interpolation;
  algorithms -> matching;
}
